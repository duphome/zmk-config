/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/pointing.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

&led_strip {
    chain-length = <21>;
};


/ {

   // Activate ADJUST layer by pressing raise and lower
    conditional_layers {
        compatible = "zmk,conditional-layers";
        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

    keymap {



 // RGB
        rgb_bri_sat_inc: rgb_bri_sat_inc {
            compatible = "zmk,behavior-mod-morph";
            label = "RGB_BRIGHTNESS_SATURATION_INCREASE";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_SAI>, <&rgb_ug RGB_BRI>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };
        rgb_bri_sat_dec: rgb_bri_sat_dec {
            compatible = "zmk,behavior-mod-morph";
            label = "RGB_BRIGHTNESS_SATURATION_DECREASE";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_SAD>, <&rgb_ug RGB_BRD>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };
        rgb_inc: rgb_inc {
            compatible = "zmk,behavior-mod-morph";
            label = "RGB_INCREASE";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_HUI>, <&rgb_bri_sat_inc>;
            mods = <(MOD_LSFT|MOD_RSFT|MOD_LCTL|MOD_RCTL)>;
        };
        rgb_dec: rgb_dec {
            compatible = "zmk,behavior-mod-morph";
            label = "RGB_DECREASE";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_HUD>, <&rgb_bri_sat_dec>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };



macros {
// System and Power
        tm: tm {
            label = "TASK_MANAGER";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL &kp LSHFT>
                , <&macro_tap &kp ESC>
                , <&macro_release &kp LCTRL &kp LSHFT>
                ;
        };
        cad: cad{
            label = "CTRL_ALT_DEL";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL &kp LALT &kp DEL>
                , <&macro_release &kp LCTRL &kp LALT &kp DEL>
                ;
        };
        slp: slp {
            label = "SLEEP";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp X>
                , <&macro_release &kp LGUI>
                , <&macro_tap &kp U &kp S>
                ;
        };
        rst: rst {
            label = "RESTART";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp X>
                , <&macro_release &kp LGUI>
                , <&macro_tap &kp U &kp R>
                ;
        };
        off: off {
            label = "SHUTDOWN";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp X>
                , <&macro_release &kp LGUI>
                , <&macro_tap &kp U &kp U>
                ;
        };
// Microphones
        teams_mute: teams_mute {
        label = "TEAMS_MUTE";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_tap   &bt BT_SEL 1>
            , <&macro_wait_time 100>
            , <&macro_press   &kp LGUI>
            , <&macro_tap     &kp N3>
            , <&macro_release &kp LGUI>
            , <&macro_wait_time 50>
            , <&macro_press   &kp LCTRL &kp LSHFT>
            , <&macro_tap     &kp M>
            , <&macro_release &kp LCTRL &kp LSHFT>;
        }; 
// Browser Controls
        tab_right: tab_right {
        label = "TAB_RIGHT";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <0>;
        bindings
            = <&macro_press   &kp LCTRL>
            , <&macro_tap     &kp TAB>
            , <&macro_release &kp LCTRL>;
        };
        tab_left: tab_left {
        label = "TAB_LEFT";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <0>;
        bindings
            = <&macro_press   &kp LCTRL &kp LSHFT>
            , <&macro_tap     &kp TAB>
            , <&macro_release &kp LCTRL &kp LSHFT>;
        };
        close_tab: close_tab {
        label = "CLOSE_TAB";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <0>;
        bindings
            = <&macro_press   &kp LCTRL>
            , <&macro_tap     &kp W>
            , <&macro_release &kp LCTRL>;
        };
//Unicode Special Characters
//Need regkey HKEY_CURRENT_USER\Control Panel\Input Method, REG_SZ EnableHexNumpad = 1
//Symbols       
        smfada_a: smfada_a {
        label = "SMALL_FADA_A";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp E &kp KP_N1>
            , <&macro_release &kp LALT>;
        }; 
        lfada_a: lfada_a {
        label = "LARGE_FADA_A";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp C &kp KP_N1>
            , <&macro_release &kp LALT>;
        }; 
        smumlaut_a: smumlaut_a {
        label = "SMALL_UMLAUT_A";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp E &kp KP_N4>
            , <&macro_release &kp LALT>;
        }; 
        lumlaut_a: lumlaut_a {
        label = "LARGE_UMLAUT_A";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp C &kp KP_N4>
            , <&macro_release &kp LALT>;
        }; 
        smlat_ae: smlat_ae {
        label = "SMALL_LATIN_AE";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp E &kp KP_N6>
            , <&macro_release &kp LALT>;
        };
        lglat_ae: lglat_ae {
        label = "LARGE_LATIN_AE";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp C &kp KP_N6>
            , <&macro_release &kp LALT>;
        };
        smfada_e: smfada_e {
        label = "SMALL_FADA_E";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp E &kp KP_N9>
            , <&macro_release &kp LALT>;
        };
        lfada_e: lfada_e {
        label = "LARGE_FADA_E";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp C &kp KP_N9>
            , <&macro_release &kp LALT>;
        };
        smfada_i: smfada_i {
        label = "SMALL_FADA_I";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp E &kp D>
            , <&macro_release &kp LALT>;
        };
        lfada_i: lfada_i {
        label = "LARGE_FADA_I";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp C &kp D>
            , <&macro_release &kp LALT>;
        };
        smfada_o: smfada_o {
        label = "SMALL_FADA_O";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp F &kp KP_N3>
            , <&macro_release &kp LALT>;
        };
        lfada_o: lfada_o {
        label = "LARGE_FADA_O";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp D &kp KP_N3>
            , <&macro_release &kp LALT>;
        };
        smumlaut_o: smumlaut_o {
        label = "SMALL_UMLAUT_O";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp F &kp KP_N6>
            , <&macro_release &kp LALT>;
        }; 
        lumlaut_o: lumlaut_o {
        label = "LARGE_UMLAUT_O";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp D &kp KP_N6>
            , <&macro_release &kp LALT>;
        }; 
        smfada_u: smfada_u {
        label = "SMALL_FADA_U";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp F &kp A>
            , <&macro_release &kp LALT>;
        };
        lfada_u: lfada_u {
        label = "LARGE_FADA_U";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp D &kp A>
            , <&macro_release &kp LALT>;
        };
        smumlaut_u: smumlaut_u {
        label = "SMALL_UMLAUT_U";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp F &kp C>
            , <&macro_release &kp LALT>;
        }; 
        lumlaut_u: lumlaut_u {
        label = "LARGE_UMLAUT_U";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp D &kp C>
            , <&macro_release &kp LALT>;
        }; 
        smtil_n: smtil_n {
        label = "SMALL_TILDE_N";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp F &kp KP_N1>
            , <&macro_release &kp LALT>;
        };
        ltil_n: ltil_n {
        label = "LARGE_TILDE_N";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp D &kp KP_N1>
            , <&macro_release &kp LALT>;
        };
        essette_s: essette_s {
        label = "ESSETTE_S";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp D &kp F>
            , <&macro_release &kp LALT>;
        };
        euro: euro {
        label = "EURO";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N2 &kp KP_N0 &kp A &kp C>
            , <&macro_release &kp LALT>;
        };
        us_cent: us_cent {
        label = "US_CENT";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp A &kp KP_N2>
            , <&macro_release &kp LALT>;
        };
        uk_pnd: uk_pnd {
        label = "UK_POUND";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp A &kp KP_N3>
            , <&macro_release &kp LALT>;
        };
        degree: degree {
        label = "DEGREE_SIGN";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp B &kp KP_N0>
            , <&macro_release &kp LALT>;
        };
        inv_exc: inv_exc {
        label = "INVERTED_EXCLAMATION_MARK";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp A &kp KP_N1>
            , <&macro_release &kp LALT>;
        };
        inv_ques: inv_ques {
        label = "INVERTED_QUESTION_MARK";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp B &kp F>
            , <&macro_release &kp LALT>;
        };
        plus_min: plus_min {
        label = "PLUS_MINUS_SIGN";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp B &kp KP_N1>
            , <&macro_release &kp LALT>;
        };

//IPA
        schwa: schwa {
        label = "SCHWA";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N0 &kp KP_N2 &kp KP_N5 &kp KP_N9>
            , <&macro_release &kp LALT>;
        };
//Diacritical Characters
        smogo_a: smogo_a {
        label = "SMALL_OGONEK_A";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N0 &kp KP_N5>
            , <&macro_release &kp LALT>;
        };
        logo_a: logo_a {
        label = "LARGE_OGONEK_A";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N0 &kp KP_N4>
            , <&macro_release &kp LALT>;
        };
        smogo_e: smogo_e {
        label = "SMALL_OGONEK_E";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N1 &kp KP_N9>
            , <&macro_release &kp LALT>;
        };
        logo_e: logo_e {
        label = "LARGE_OGONEK_E";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N1 &kp KP_N8>
            , <&macro_release &kp LALT>;
        };
        smacute_c: smacute_c {
        label = "SMALL_ACUTE_C";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N0 &kp KP_N7>
            , <&macro_release &kp LALT>;
        };
        lacute_c: lacute_c {
        label = "LARGE_ACUTE_C";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N0 &kp KP_N6>
            , <&macro_release &kp LALT>;
        };
        smdark_l: smdark_l {
        label = "SMALL_DARK_L";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N4 &kp KP_N2>
            , <&macro_release &kp LALT>;
        };
        ldark_l: ldark_l {
        label = "LARGE_DARK_L";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N4 &kp KP_N1>
            , <&macro_release &kp LALT>;
        };
        smacute_n: smacute_n {
        label = "SMALL_ACUTE_N";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N4 &kp KP_N4>
            , <&macro_release &kp LALT>;
        };
        lacute_n: lacute_n {
        label = "LARGE_ACUTE_N";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N4 &kp KP_N3>
            , <&macro_release &kp LALT>;
        };
        smacute_s: smacute_s {
        label = "SMALL_ACUTE_S";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N5 &kp B>
            , <&macro_release &kp LALT>;
        };
        lacute_s: lacute_s {
        label = "LARGE_ACUTE_S";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N5 &kp A>
            , <&macro_release &kp LALT>;
        };
        smacute_z: smacute_z {
        label = "SMALL_ACUTE_Z";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N7 &kp A>
            , <&macro_release &kp LALT>;
        };
        lacute_z: lacute_z {
        label = "LARGE_ACUTE_Z";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N7 &kp KP_N9>
            , <&macro_release &kp LALT>;
        };
        smdot_z: smdot_z {
        label = "SMALL_DOT_Z";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N7 &kp C>
            , <&macro_release &kp LALT>;
        };
        ldot_z: ldot_z {
        label = "LARGE_DOT_Z";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N7 &kp B>
            , <&macro_release &kp LALT>;
        };
    // Fractions
        one_half: one_half {
        label = "ONE_HALF";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp B &kp D>
            , <&macro_release &kp LALT>;
        };
        one_third: one_third {
        label = "ONE_THIRD";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N2 &kp KP_N1 &kp KP_N5 &kp KP_N3>
            , <&macro_release &kp LALT>;
        };
        one_fourth: one_fourth {
        label = "ONE_FOURTH";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp B &kp C>
            , <&macro_release &kp LALT>;
        };
        one_eighth: one_eighth {
        label = "ONE_EIGHTH";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N2 &kp KP_N1 &kp KP_N5 &kp B>
            , <&macro_release &kp LALT>;
        };
        two_thirds: two_thirds {
        label = "TWO_THIRDS";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N2 &kp KP_N1 &kp KP_N5 &kp KP_N4>
            , <&macro_release &kp LALT>;
        };
        three_fourths: three_fourths {
        label = "THREE_FOURTHS";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp B &kp E>
            , <&macro_release &kp LALT>;
        };
        three_eighths: three_eighths {
        label = "THREE_EIGHTHS";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N2 &kp KP_N1 &kp KP_N5 &kp C>
            , <&macro_release &kp LALT>;
        };
        five_eighths: five_eighths {
        label = "FIVE_EIGHTHS";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N2 &kp KP_N1 &kp KP_N5 &kp D>
            , <&macro_release &kp LALT>;
        };
        seven_eighths: seven_eighths {
        label = "SEVEN_EIGHTHS";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N2 &kp KP_N1 &kp KP_N5 &kp E>
            , <&macro_release &kp LALT>;
        };
    // Operators
        less_equ: less_equ {
        label = "LESS_THEN_OR_EQUAL_TO";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N2 &kp KP_N2 &kp KP_N6 &kp KP_N4>
            , <&macro_release &kp LALT>;
        };
        gtr_equ: gtr_equ {
        label = "GREATER_THEN_OR_EQUAL_TO";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N2 &kp KP_N2 &kp KP_N6 &kp KP_N5>
            , <&macro_release &kp LALT>;
        };
        not_equ: not_equ {
        label = "DOES_NOT_EQUAL";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N2 &kp KP_N2 &kp KP_N6 &kp KP_N0>
            , <&macro_release &kp LALT>;
        };
        alm_equ: alm_equ {
        label = "ALMOST_EQUAL";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N2 &kp KP_N2 &kp KP_N4 &kp KP_N8>
            , <&macro_release &kp LALT>;
        };
        dbl_left: dbl_left {
        label = "DOUBLE_LEFT_MARKS";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp A &kp B>
            , <&macro_release &kp LALT>;
        };
        dbl_right: dbl_right {
        label = "DOUBLE_RIGHT_MARKS";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        tap-ms = <0>;
        wait-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp B &kp B>
            , <&macro_release &kp LALT>;
        };
    };


        compatible = "zmk,keymap";

        default_layer {
            display-name = "default";

// ------------------------------------------------------------------------------------------------------------
// |   `   | （  |   ）|  乘   |  a  |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
// |   7   |  8  |  9  |  除   |  b  |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
// |   4   |  5  |  6  |  +   |  c   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// |   1   |  2  |  3  |  -   |  d   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
// |   back|  0  |  .  |  = R | enter
  bindings = <
//&to 2   &kp LPAR    &kp RPAR    &kp ASTRK   &kp N3   &kp A                               &kp N6 &kp N7    &kp N8    &kp N9   &kp N0   &none
//&kp N7      &kp N8      &kp N9      &kp NUBS    &kp R     &kp T                            &kp Y  &kp U     &kp I     &kp O    &kp P    &kp BSPC
//&kp N4      &kp N5      &kp N6      &kp PLUS    &kp D    &kp F     &kp G                            &kp H  &kp J     &kp K     &kp L    &kp SEMI &kp SQT
//&kp N1      &kp N2      &kp N3      &kp UNDER     &kp V     &kp B      &kp C_MUTE &none      &kp N  &kp M     &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
//&kp BSPC    &kp N0     &kp DOT      &kp EQUAL   &kp RET    &kp SPACE  &mo RAISE  &kp RCTRL &kp RALT  &kp RGUI
&kp GRAVE &kp N1 &kp N2   &kp N3   &kp N4    &kp N5                               &kp N6 &kp N7    &kp N8    &kp N9   &kp N0   &none
&kp N7      &rgb_ug RGB_TOG  &kp W    &kp E    &kp R     &kp T                             &kp Y  &kp U     &kp I     &kp O    &kp P    &kp BSPC
&kp N4      &rgb_ug RGB_BRI &kp PSCRN &kp D    &kp F     &kp G                            &kp H  &kp J     &kp K     &kp L    &kp SEMI &kp SQT
&kp N1      &rgb_ug RGB_BRD  &kp X    &kp C    &kp V     &kp B      &kp C_MUTE &none      &kp N  &kp M     &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
&kp N0     &kp H  &kp J     &kp K     &kp L  &kp Y  &kp U     &kp I

// ------------------------------------------------------------------------------------------------------------
// |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
// |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
// |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |
//            bindings = <
//&kp GRAVE &kp N1 &kp N2   &kp N3   &kp N4    &kp N5                           &kp N6 &kp N7    &kp N8    &kp N9   &kp N0   &none
//&kp ESC   &kp Q  &kp W    &kp E    &kp R     &kp T                            &kp Y  &kp U     &kp I     &kp O    &kp P    &kp BSPC
//&kp TAB   &kp A  &kp S    &kp D    &kp F     &kp G                            &kp H  &kp J     &kp K     &kp L    &kp SEMI &kp SQT
//&kp LSHFT &kp Z  &kp X    &kp C    &kp V     &kp B      &kp C_MUTE &none      &kp N  &kp M     &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
//                 &kp LGUI &kp LALT &kp LCTRL &mo LOWER  &kp RET    &kp SPACE  &mo RAISE  &kp RCTRL &kp RALT  &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {
            display-name = "lower";
// TODO: Some binds are waiting for shifted keycode support.
// ------------------------------------------------------------------------------------------------------------
// |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
// |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
// |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
// |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
//               |     |      |      |      |        |  |       |      |       |       |      |
            bindings = <
//&to 1    &kp F1    &kp F2    &kp F3      &kp F4    &kp F5                    &kp F6    &kp F7   &kp F8    &kp F9    &kp F10   &kp F11
//&kp GRAVE &kp N1    &kp N2    &kp N3      &kp N4    &kp N5                    &kp N6    &kp N7   &kp N8    &kp N9    &kp N0    &kp F12
//&trans    &kp EXCL  &kp AT    &kp HASH    &kp DLLR  &kp PRCNT                 &kp CARET &kp AMPS &kp ASTRK &kp LPAR  &kp RPAR  &kp PIPE
//&trans    &kp EQUAL &kp MINUS &kp PLUS &kp LBRC  &kp RBRC   &trans &trans  &kp LBKT  &kp RBKT &kp SEMI  &kp COLON &kp BSLH  &trans
//                    &trans    &trans      &trans    &trans     &trans &trans  &trans    &trans   &trans    &trans
&to 1 &kp N1 &kp N2   &kp N3   &kp N4    &kp N5                           &kp N6 &kp N7    &kp N8    &kp N9   &kp N0   &none
&kp ESC   &kp Q  &kp W    &kp E    &kp R     &kp T                            &kp Y  &kp U     &kp I     &kp O    &kp P    &kp BSPC
&kp TAB   &kp A  &kp S    &kp D    &kp F     &kp G                            &kp H  &kp J     &kp K     &kp L    &kp SEMI &kp SQT
&kp LSHFT &kp Z  &kp X    &kp C    &kp V     &kp B      &kp C_MUTE &none      &kp N  &kp M     &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
                 &kp LGUI &kp LALT &kp LCTRL &mo LOWER  &kp RET    &kp SPACE  &mo RAISE  &kp RCTRL &kp RALT  &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            display-name = "raise";
// ------------------------------------------------------------------------------------------------------------
// | BTCLR | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
// |       | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
// |       | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
// |       | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
//                |      |       |       |      |      |  |      |      |      |       |      |
            bindings = <
&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                  &trans    &trans    &trans   &trans    &trans  &trans
&trans     &kp INS      &kp PSCRN    &kp K_CMENU  &trans       &trans                        &kp PG_UP &trans    &kp UP   &trans    &kp N0  &trans
&trans     &kp LALT     &kp LCTRL    &kp LSHFT    &trans       &kp CLCK                      &kp PG_DN &kp LEFT  &kp DOWN &kp RIGHT &kp DEL &kp BSPC
&trans     &kp K_UNDO   &kp K_CUT    &kp K_COPY   &kp K_PASTE  &trans        &trans  &trans  &trans    &trans    &trans   &trans    &trans  &trans
                        &trans       &trans       &trans       &trans        &trans  &trans  &trans    &trans    &trans   &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        adjust_layer {
// ----------------------------------------------------------------------------------------------------------------------------
// | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
// | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
// |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
// |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
//                    |         |         |         |         |         | |      |      |      |       |      |
            display-name = "adjust";
            bindings = <
&bt BT_CLR        &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4                            &none &none &none &none &none &none
&ext_power EP_TOG &rgb_ug RGB_HUD &rgb_ug RGB_HUI &rgb_ug RGB_SAD &rgb_ug RGB_SAI &rgb_ug RGB_EFF                         &none &none &none &none &none &none
&none             &rgb_ug RGB_BRD &rgb_ug RGB_BRI &none           &none           &none                                   &none &none &none &none &none &none
&none             &none           &none           &none           &none           &none            &rgb_ug RGB_TOG &none  &none &none &none &none &none &none
                                  &none           &none           &none           &none            &none           &none  &none &none &none &none
            >;
        };

    };
};

 &led_strip {
    chain-length = <21>;
};
